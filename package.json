{
  "name": "@latitudegames/thoth",
  "version": "0.0.1",
  "private": true,
  "license": "apache 2.0",
  "author": "Michael Sharpe <m.sharpe@project89.org> (https://www.project89.org)",
  "contributors": [
    "Sean Gillespie <s.gillespie@project89.org>",
    "Jakob Grant <j.grant@project89.org>",
    "Preston Gull <gull.preston@gmail.com>"
  ],
  "workspaces": {
    "packages": [
      "client",
      "core",
      "server",
      "sharedb"
    ]
  },
  "scripts": {
    "start:core": "lerna exec --scope @latitudegames/thoth-core -- yarn start",
    "dev": "NODE_OPTIONS=--max-old-space-size=8192 && NODE_TLS_REJECT_UNAUTHORIZED='0' && (cd server && docker-compose up -d) && (cd server/weaviate && docker-compose up -d) && (cd server/redis && docker-compose up -d) && concurrently \"sleep 5 && yarn run dev:server\" \"yarn start:core\" \"sleep 1 && yarn start:client\" \"sleep 5 && yarn run db:seed\" ",
    "dev-windows": "cross-env NODE_OPTIONS=--max-old-space-size=8192 yarn run dev-windows-script",
    "dev-windows-script": "(cd server && docker-compose up -d) && (cd server/weaviate && docker-compose up -d) && (cd server/redis && docker-compose up -d) && concurrently \"sleep 5 && yarn run dev:server\" \"yarn start:core\" \"sleep 1 && yarn start:client\" \"sleep 5 && yarn run db:seed\" ",
    "dev:client": "concurrently \"yarn start:core\" \"sleep 1 && yarn start:client\"",
    "dev:server": "lerna exec --scope @latitudegames/thoth-server -- yarn run dev",
    "db:seed": "npx sequelize-cli db:seed:all --url 'postgres://thoth:thoth_default_pw@localhost:5432/thoth'",
    "start:client": "lerna exec --scope @latitudegames/thoth-client -- yarn start",
    "start:sharedb": "lerna exec --scope @latitudegames/thoth-sharedb -- yarn start",
    "start": "run-p start:core start:client",
    "lint": "lerna run lint --parallel",
    "lint:fix": "lerna run lint:fix --parallel",
    "build": "copyfiles LICENSE.txt client && lerna exec --scope @latitudegames/thoth-client -- yarn build",
    "build:core": "copyfiles LICENSE.txt core && lerna exec --scope @latitudegames/thoth-core -- yarn build",
    "publish:canary": "lerna exec --scope @latitudegames/thoth-core -- yarn canary",
    "install:canary": "lerna exec --scope @latitudegames/thoth-client -- yarn install:canary"
  },
  "engines": {
    "node": ">=14.17.6",
    "npm": ">=6.12.0",
    "yarn": "^1.22.10"
  },
  "resolutions": {
    "@types/react": "18.0.0"
  },
  "devDependencies": {
    "@types/wav": "^1.0.1",
    "concurrently": "^7.1.0",
    "craco": "^0.0.3",
    "cross-env": "^7.0.3",
    "lerna": "^4.0.0",
    "react": "^18.0.0",
    "rn-nodeify": "^10.3.0"
  },
  "dependencies": {
    "@discordjs/opus": "^0.7.0",
    "@discordjs/voice": "^0.9.0",
    "@google-cloud/text-to-speech": "^3.4.0",
    "@pipedream/platform": "^0.10.0",
    "@plotdb/json0": "^0.0.5",
    "@slack/bolt": "^3.11.1",
    "@slack/events-api": "^3.0.1",
    "@slack/web-api": "^6.7.2",
    "@tradle/react-native-http": "^2.0.0",
    "@types/nodemailer": "^6.4.4",
    "@typescript-eslint/eslint-plugin": "^4.31.1",
    "@typescript-eslint/parser": "^4.31.1",
    "copyfiles": "^2.4.1",
    "diff-match-patch": "^1.0.5",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-prettier": "^4.0.0",
    "express": "^4.18.1",
    "ffmpeg-static": "^5.0.0",
    "https": "^1.0.0",
    "https-browserify": "^1.0.0",
    "json0-ot-diff": "^1.1.2",
    "libsodium-wrappers": "^0.7.10",
    "m3u8_multi_downloader": "^1.1.5",
    "m3u8-to-mp4": "^1.0.0",
    "natural": "^5.2.2",
    "node-telegram-bot-api": "^0.57.0",
    "node-wit": "^6.2.1",
    "node-witai-speech": "^1.0.2",
    "nodemailer": "^6.7.5",
    "npm-run-all": "^4.1.5",
    "opusscript": "^0.0.8",
    "pg-format": "^1.0.4",
    "pipedream": "^0.2.2",
    "prettier": "^2.4.1",
    "prism-media": "^1.3.2",
    "socket.io-client": "^4.5.0",
    "redis": "^4.1.0",
    "rete-react-render-plugin": "^0.2.1",
    "sodium": "^3.0.2",
    "topic-detection": "^0.1.2",
    "tweetnacl": "^1.0.3",
    "wav": "^1.0.2"
  },
  "react-native": {
    "https": "https-browserify"
  },
  "browser": {
    "https": "https-browserify"
  }
}
